/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PledgePaymentBase
 */
export interface PledgePaymentBase {
    /**
     * 
     * @type {string}
     * @memberof PledgePaymentBase
     */
    type?: PledgePaymentBaseTypeEnum;
    /**
     * The designation ID of the payment's pledge
     * @type {number}
     * @memberof PledgePaymentBase
     */
    pledgeId?: number;
}

/**
* @export
* @enum {string}
*/
export enum PledgePaymentBaseTypeEnum {
    PledgePayment = 'PledgePayment'
}


/**
 * Check if a given object implements the PledgePaymentBase interface.
 */
export function instanceOfPledgePaymentBase(value: object): value is PledgePaymentBase {
    return true;
}

export function PledgePaymentBaseFromJSON(json: any): PledgePaymentBase {
    return PledgePaymentBaseFromJSONTyped(json, false);
}

export function PledgePaymentBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PledgePaymentBase {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['Type'] == null ? undefined : json['Type'],
        'pledgeId': json['PledgeId'] == null ? undefined : json['PledgeId'],
    };
}

export function PledgePaymentBaseToJSON(json: any): PledgePaymentBase {
    return PledgePaymentBaseToJSONTyped(json, false);
}

export function PledgePaymentBaseToJSONTyped(value?: PledgePaymentBase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Type': value['type'],
        'PledgeId': value['pledgeId'],
    };
}

export const PledgePaymentBasePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

