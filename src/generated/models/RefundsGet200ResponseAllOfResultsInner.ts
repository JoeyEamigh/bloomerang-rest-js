/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail } from './CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail';
import {
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailFromJSON,
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailFromJSONTyped,
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailToJSON,
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailToJSONTyped,
} from './CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail';

/**
 * 
 * @export
 * @interface RefundsGet200ResponseAllOfResultsInner
 */
export interface RefundsGet200ResponseAllOfResultsInner {
    /**
     * The ID of the refund
     * @type {number}
     * @memberof RefundsGet200ResponseAllOfResultsInner
     */
    id?: number;
    /**
     * The ID of the transaction used in the API (not to be confused with transactionNumber)
     * @type {number}
     * @memberof RefundsGet200ResponseAllOfResultsInner
     */
    transactionId?: number;
    /**
     * The reason for making this refund
     * @type {string}
     * @memberof RefundsGet200ResponseAllOfResultsInner
     */
    note?: string;
    /**
     * 
     * @type {Date}
     * @memberof RefundsGet200ResponseAllOfResultsInner
     */
    date?: Date;
    /**
     * 
     * @type {number}
     * @memberof RefundsGet200ResponseAllOfResultsInner
     */
    amount?: number;
    /**
     * 
     * @type {CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail}
     * @memberof RefundsGet200ResponseAllOfResultsInner
     */
    auditTrail?: CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail;
}

/**
 * Check if a given object implements the RefundsGet200ResponseAllOfResultsInner interface.
 */
export function instanceOfRefundsGet200ResponseAllOfResultsInner(value: object): value is RefundsGet200ResponseAllOfResultsInner {
    return true;
}

export function RefundsGet200ResponseAllOfResultsInnerFromJSON(json: any): RefundsGet200ResponseAllOfResultsInner {
    return RefundsGet200ResponseAllOfResultsInnerFromJSONTyped(json, false);
}

export function RefundsGet200ResponseAllOfResultsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefundsGet200ResponseAllOfResultsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['Id'] == null ? undefined : json['Id'],
        'transactionId': json['TransactionId'] == null ? undefined : json['TransactionId'],
        'note': json['Note'] == null ? undefined : json['Note'],
        'date': json['Date'] == null ? undefined : (new Date(json['Date'])),
        'amount': json['Amount'] == null ? undefined : json['Amount'],
        'auditTrail': json['AuditTrail'] == null ? undefined : CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailFromJSON(json['AuditTrail']),
    };
}

export function RefundsGet200ResponseAllOfResultsInnerToJSON(json: any): RefundsGet200ResponseAllOfResultsInner {
    return RefundsGet200ResponseAllOfResultsInnerToJSONTyped(json, false);
}

export function RefundsGet200ResponseAllOfResultsInnerToJSONTyped(value?: RefundsGet200ResponseAllOfResultsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Id': value['id'],
        'TransactionId': value['transactionId'],
        'Note': value['note'],
        'Date': value['date'] == null ? undefined : ((value['date']).toISOString().substring(0,10)),
        'Amount': value['amount'],
        'AuditTrail': CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailToJSON(value['auditTrail']),
    };
}

export const RefundsGet200ResponseAllOfResultsInnerPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

