/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WalletitemPostRequest
 */
export interface WalletitemPostRequest {
    /**
     * The ID of the constituent used in the API (not to be confused with accountNumber)
     * @type {number}
     * @memberof WalletitemPostRequest
     */
    accountId: number;
    /**
     * The ID of the processor account used in the API
     * @type {number}
     * @memberof WalletitemPostRequest
     */
    transactionProcessorAccountId: number;
    /**
     * 
     * @type {string}
     * @memberof WalletitemPostRequest
     */
    type: WalletitemPostRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof WalletitemPostRequest
     */
    token: string;
    /**
     * Is the provided token from Spreedly?
     * @type {boolean}
     * @memberof WalletitemPostRequest
     */
    isSpreedlyToken: boolean;
    /**
     * Required if Type is Eft
     * @type {string}
     * @memberof WalletitemPostRequest
     */
    eftAccountType?: WalletitemPostRequestEftAccountTypeEnum;
    /**
     * Required if Type is Eft.  Must be exactly 4 characters
     * @type {string}
     * @memberof WalletitemPostRequest
     */
    eftAccountLastFour?: string;
    /**
     * Required if Type is Eft.  Must be no more than 32 characters
     * @type {string}
     * @memberof WalletitemPostRequest
     */
    eftRoutingNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof WalletitemPostRequest
     */
    creditCardType?: WalletitemPostRequestCreditCardTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum WalletitemPostRequestTypeEnum {
    CreditCard = 'CreditCard',
    Eft = 'Eft'
}
/**
* @export
* @enum {string}
*/
export enum WalletitemPostRequestEftAccountTypeEnum {
    Checking = 'Checking',
    Savings = 'Savings'
}
/**
* @export
* @enum {string}
*/
export enum WalletitemPostRequestCreditCardTypeEnum {
    Visa = 'Visa',
    MasterCard = 'MasterCard',
    Discover = 'Discover',
    AmericanExpress = 'AmericanExpress',
    DinersClub = 'DinersClub',
    Jcb = 'JCB'
}


/**
 * Check if a given object implements the WalletitemPostRequest interface.
 */
export function instanceOfWalletitemPostRequest(value: object): value is WalletitemPostRequest {
    if (!('accountId' in value) || value['accountId'] === undefined) return false;
    if (!('transactionProcessorAccountId' in value) || value['transactionProcessorAccountId'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('isSpreedlyToken' in value) || value['isSpreedlyToken'] === undefined) return false;
    return true;
}

export function WalletitemPostRequestFromJSON(json: any): WalletitemPostRequest {
    return WalletitemPostRequestFromJSONTyped(json, false);
}

export function WalletitemPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WalletitemPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['AccountId'],
        'transactionProcessorAccountId': json['TransactionProcessorAccountId'],
        'type': json['Type'],
        'token': json['Token'],
        'isSpreedlyToken': json['IsSpreedlyToken'],
        'eftAccountType': json['EftAccountType'] == null ? undefined : json['EftAccountType'],
        'eftAccountLastFour': json['EftAccountLastFour'] == null ? undefined : json['EftAccountLastFour'],
        'eftRoutingNumber': json['EftRoutingNumber'] == null ? undefined : json['EftRoutingNumber'],
        'creditCardType': json['CreditCardType'] == null ? undefined : json['CreditCardType'],
    };
}

export function WalletitemPostRequestToJSON(json: any): WalletitemPostRequest {
    return WalletitemPostRequestToJSONTyped(json, false);
}

export function WalletitemPostRequestToJSONTyped(value?: WalletitemPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'AccountId': value['accountId'],
        'TransactionProcessorAccountId': value['transactionProcessorAccountId'],
        'Type': value['type'],
        'Token': value['token'],
        'IsSpreedlyToken': value['isSpreedlyToken'],
        'EftAccountType': value['eftAccountType'],
        'EftAccountLastFour': value['eftAccountLastFour'],
        'EftRoutingNumber': value['eftRoutingNumber'],
        'CreditCardType': value['creditCardType'],
    };
}

export const WalletitemPostRequestPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

