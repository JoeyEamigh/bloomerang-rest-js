/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserCurrentGet200ResponseAllOfUserTimeZone
 */
export interface UserCurrentGet200ResponseAllOfUserTimeZone {
    /**
     * See [.NET's TimeZoneInfo.Id property](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.id)
     * @type {string}
     * @memberof UserCurrentGet200ResponseAllOfUserTimeZone
     */
    id?: string;
    /**
     * See [.NET's TimeZoneInfo.StandardName property](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.standardname)
     * @type {string}
     * @memberof UserCurrentGet200ResponseAllOfUserTimeZone
     */
    name?: string;
    /**
     * See [.NET's TimeZoneInfo.BaseUtcOffset property](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.baseutcoffset)
     * @type {string}
     * @memberof UserCurrentGet200ResponseAllOfUserTimeZone
     */
    utcOffset?: string;
}

/**
 * Check if a given object implements the UserCurrentGet200ResponseAllOfUserTimeZone interface.
 */
export function instanceOfUserCurrentGet200ResponseAllOfUserTimeZone(value: object): value is UserCurrentGet200ResponseAllOfUserTimeZone {
    return true;
}

export function UserCurrentGet200ResponseAllOfUserTimeZoneFromJSON(json: any): UserCurrentGet200ResponseAllOfUserTimeZone {
    return UserCurrentGet200ResponseAllOfUserTimeZoneFromJSONTyped(json, false);
}

export function UserCurrentGet200ResponseAllOfUserTimeZoneFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserCurrentGet200ResponseAllOfUserTimeZone {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['Id'] == null ? undefined : json['Id'],
        'name': json['Name'] == null ? undefined : json['Name'],
        'utcOffset': json['UtcOffset'] == null ? undefined : json['UtcOffset'],
    };
}

export function UserCurrentGet200ResponseAllOfUserTimeZoneToJSON(json: any): UserCurrentGet200ResponseAllOfUserTimeZone {
    return UserCurrentGet200ResponseAllOfUserTimeZoneToJSONTyped(json, false);
}

export function UserCurrentGet200ResponseAllOfUserTimeZoneToJSONTyped(value?: UserCurrentGet200ResponseAllOfUserTimeZone | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Id': value['id'],
        'Name': value['name'],
        'UtcOffset': value['utcOffset'],
    };
}

export const UserCurrentGet200ResponseAllOfUserTimeZonePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

