/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WalletItemBase
 */
export interface WalletItemBase {
    /**
     * The ID of the constituent used in the API (not to be confused with accountNumber)
     * @type {number}
     * @memberof WalletItemBase
     */
    accountId?: number;
    /**
     * The ID of the processor account used in the API
     * @type {number}
     * @memberof WalletItemBase
     */
    transactionProcessorAccountId?: number;
}

/**
 * Check if a given object implements the WalletItemBase interface.
 */
export function instanceOfWalletItemBase(value: object): value is WalletItemBase {
    return true;
}

export function WalletItemBaseFromJSON(json: any): WalletItemBase {
    return WalletItemBaseFromJSONTyped(json, false);
}

export function WalletItemBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WalletItemBase {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['AccountId'] == null ? undefined : json['AccountId'],
        'transactionProcessorAccountId': json['TransactionProcessorAccountId'] == null ? undefined : json['TransactionProcessorAccountId'],
    };
}

export function WalletItemBaseToJSON(json: any): WalletItemBase {
    return WalletItemBaseToJSONTyped(json, false);
}

export function WalletItemBaseToJSONTyped(value?: WalletItemBase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'AccountId': value['accountId'],
        'TransactionProcessorAccountId': value['transactionProcessorAccountId'],
    };
}

export const WalletItemBasePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

