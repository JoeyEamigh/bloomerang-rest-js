/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HouseholdBase
 */
export interface HouseholdBase {
    /**
     * 
     * @type {string}
     * @memberof HouseholdBase
     */
    fullName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdBase
     */
    sortName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdBase
     */
    informalName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdBase
     */
    formalName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdBase
     */
    envelopeName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdBase
     */
    recognitionName?: string;
}

/**
 * Check if a given object implements the HouseholdBase interface.
 */
export function instanceOfHouseholdBase(value: object): value is HouseholdBase {
    return true;
}

export function HouseholdBaseFromJSON(json: any): HouseholdBase {
    return HouseholdBaseFromJSONTyped(json, false);
}

export function HouseholdBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HouseholdBase {
    if (json == null) {
        return json;
    }
    return {
        
        'fullName': json['FullName'] == null ? undefined : json['FullName'],
        'sortName': json['SortName'] == null ? undefined : json['SortName'],
        'informalName': json['InformalName'] == null ? undefined : json['InformalName'],
        'formalName': json['FormalName'] == null ? undefined : json['FormalName'],
        'envelopeName': json['EnvelopeName'] == null ? undefined : json['EnvelopeName'],
        'recognitionName': json['RecognitionName'] == null ? undefined : json['RecognitionName'],
    };
}

export function HouseholdBaseToJSON(json: any): HouseholdBase {
    return HouseholdBaseToJSONTyped(json, false);
}

export function HouseholdBaseToJSONTyped(value?: HouseholdBase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'FullName': value['fullName'],
        'SortName': value['sortName'],
        'InformalName': value['informalName'],
        'FormalName': value['formalName'],
        'EnvelopeName': value['envelopeName'],
        'RecognitionName': value['recognitionName'],
    };
}

export const HouseholdBasePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

