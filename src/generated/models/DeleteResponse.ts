/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DeleteResponse
 */
export interface DeleteResponse {
    /**
     * The ID of the object that was deleted
     * @type {number}
     * @memberof DeleteResponse
     */
    id?: number;
    /**
     * The type of object that was deleted
     * @type {string}
     * @memberof DeleteResponse
     */
    type?: string;
    /**
     * True if the object was deleted
     * @type {boolean}
     * @memberof DeleteResponse
     */
    deleted?: boolean;
}

/**
 * Check if a given object implements the DeleteResponse interface.
 */
export function instanceOfDeleteResponse(value: object): value is DeleteResponse {
    return true;
}

export function DeleteResponseFromJSON(json: any): DeleteResponse {
    return DeleteResponseFromJSONTyped(json, false);
}

export function DeleteResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['Id'] == null ? undefined : json['Id'],
        'type': json['Type'] == null ? undefined : json['Type'],
        'deleted': json['Deleted'] == null ? undefined : json['Deleted'],
    };
}

export function DeleteResponseToJSON(json: any): DeleteResponse {
    return DeleteResponseToJSONTyped(json, false);
}

export function DeleteResponseToJSONTyped(value?: DeleteResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Id': value['id'],
        'Type': value['type'],
        'Deleted': value['deleted'],
    };
}

export const DeleteResponsePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

