/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RelationshipOutputModel
 */
export interface RelationshipOutputModel {
    /**
     * 
     * @type {object}
     * @memberof RelationshipOutputModel
     */
    relationshipRole1?: object;
    /**
     * 
     * @type {object}
     * @memberof RelationshipOutputModel
     */
    relationshipRole2?: object;
    /**
     * 
     * @type {number}
     * @memberof RelationshipOutputModel
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof RelationshipOutputModel
     */
    accountId1?: number;
    /**
     * 
     * @type {number}
     * @memberof RelationshipOutputModel
     */
    accountId2?: number;
    /**
     * 
     * @type {string}
     * @memberof RelationshipOutputModel
     */
    note?: string;
}

/**
 * Check if a given object implements the RelationshipOutputModel interface.
 */
export function instanceOfRelationshipOutputModel(value: object): value is RelationshipOutputModel {
    return true;
}

export function RelationshipOutputModelFromJSON(json: any): RelationshipOutputModel {
    return RelationshipOutputModelFromJSONTyped(json, false);
}

export function RelationshipOutputModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelationshipOutputModel {
    if (json == null) {
        return json;
    }
    return {
        
        'relationshipRole1': json['RelationshipRole1'] == null ? undefined : json['RelationshipRole1'],
        'relationshipRole2': json['RelationshipRole2'] == null ? undefined : json['RelationshipRole2'],
        'id': json['Id'] == null ? undefined : json['Id'],
        'accountId1': json['AccountId1'] == null ? undefined : json['AccountId1'],
        'accountId2': json['AccountId2'] == null ? undefined : json['AccountId2'],
        'note': json['Note'] == null ? undefined : json['Note'],
    };
}

export function RelationshipOutputModelToJSON(json: any): RelationshipOutputModel {
    return RelationshipOutputModelToJSONTyped(json, false);
}

export function RelationshipOutputModelToJSONTyped(value?: RelationshipOutputModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'RelationshipRole1': value['relationshipRole1'],
        'RelationshipRole2': value['relationshipRole2'],
        'Id': value['id'],
        'AccountId1': value['accountId1'],
        'AccountId2': value['accountId2'],
        'Note': value['note'],
    };
}

export const RelationshipOutputModelPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

