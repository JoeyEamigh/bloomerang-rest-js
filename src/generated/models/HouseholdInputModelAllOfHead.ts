/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConstituentPostRequestAllOfAllOfSecondaryEmailsInner } from './ConstituentPostRequestAllOfAllOfSecondaryEmailsInner';
import {
    ConstituentPostRequestAllOfAllOfSecondaryEmailsInnerFromJSON,
    ConstituentPostRequestAllOfAllOfSecondaryEmailsInnerFromJSONTyped,
    ConstituentPostRequestAllOfAllOfSecondaryEmailsInnerToJSON,
    ConstituentPostRequestAllOfAllOfSecondaryEmailsInnerToJSONTyped,
} from './ConstituentPostRequestAllOfAllOfSecondaryEmailsInner';
import type { ConstituentPostRequestAllOfAllOfPrimaryAddress } from './ConstituentPostRequestAllOfAllOfPrimaryAddress';
import {
    ConstituentPostRequestAllOfAllOfPrimaryAddressFromJSON,
    ConstituentPostRequestAllOfAllOfPrimaryAddressFromJSONTyped,
    ConstituentPostRequestAllOfAllOfPrimaryAddressToJSON,
    ConstituentPostRequestAllOfAllOfPrimaryAddressToJSONTyped,
} from './ConstituentPostRequestAllOfAllOfPrimaryAddress';
import type { ConstituentMergeModelAllOfCustomValues } from './ConstituentMergeModelAllOfCustomValues';
import {
    ConstituentMergeModelAllOfCustomValuesFromJSON,
    ConstituentMergeModelAllOfCustomValuesFromJSONTyped,
    ConstituentMergeModelAllOfCustomValuesToJSON,
    ConstituentMergeModelAllOfCustomValuesToJSONTyped,
} from './ConstituentMergeModelAllOfCustomValues';
import type { ConstituentMergeModelAllOfCroppedCustomProfileImage } from './ConstituentMergeModelAllOfCroppedCustomProfileImage';
import {
    ConstituentMergeModelAllOfCroppedCustomProfileImageFromJSON,
    ConstituentMergeModelAllOfCroppedCustomProfileImageFromJSONTyped,
    ConstituentMergeModelAllOfCroppedCustomProfileImageToJSON,
    ConstituentMergeModelAllOfCroppedCustomProfileImageToJSONTyped,
} from './ConstituentMergeModelAllOfCroppedCustomProfileImage';
import type { ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhone } from './ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhone';
import {
    ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhoneFromJSON,
    ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhoneFromJSONTyped,
    ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhoneToJSON,
    ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhoneToJSONTyped,
} from './ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhone';

/**
 * Additional validation note - FirstName and LastName are required when Type is Individual.  FullName is required when Type is Organization.
 * @export
 * @interface HouseholdInputModelAllOfHead
 */
export interface HouseholdInputModelAllOfHead {
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    type?: HouseholdInputModelAllOfHeadTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    status?: HouseholdInputModelAllOfHeadStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    middleName?: string;
    /**
     * Must match a prefix in the Bloomerang CRM
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    prefix?: string;
    /**
     * Must match a suffix in the Bloomerang CRM
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    suffix?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    fullName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    informalName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    formalName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    envelopeName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    recognitionName?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    jobTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    employer?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    website?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    facebookId?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    twitterId?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    linkedInId?: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    gender?: HouseholdInputModelAllOfHeadGenderEnum;
    /**
     * 
     * @type {Date}
     * @memberof HouseholdInputModelAllOfHead
     */
    birthdate?: Date;
    /**
     * 
     * @type {string}
     * @memberof HouseholdInputModelAllOfHead
     */
    profilePictureType?: HouseholdInputModelAllOfHeadProfilePictureTypeEnum;
    /**
     * 
     * @type {ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhone}
     * @memberof HouseholdInputModelAllOfHead
     */
    primaryPhone?: ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhone;
    /**
     * 
     * @type {ConstituentPostRequestAllOfAllOfPrimaryAddress}
     * @memberof HouseholdInputModelAllOfHead
     */
    primaryAddress?: ConstituentPostRequestAllOfAllOfPrimaryAddress;
    /**
     * Non-primary addresses
     * @type {Array<ConstituentPostRequestAllOfAllOfPrimaryAddress>}
     * @memberof HouseholdInputModelAllOfHead
     */
    secondaryAddresses?: Array<ConstituentPostRequestAllOfAllOfPrimaryAddress>;
    /**
     * Non-primary email addresses
     * @type {Array<ConstituentPostRequestAllOfAllOfSecondaryEmailsInner>}
     * @memberof HouseholdInputModelAllOfHead
     */
    secondaryEmails?: Array<ConstituentPostRequestAllOfAllOfSecondaryEmailsInner>;
    /**
     * Non-primary phones
     * @type {Array<ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhone>}
     * @memberof HouseholdInputModelAllOfHead
     */
    secondaryPhones?: Array<ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhone>;
    /**
     * The full picture File Attachment. Note that a Constituent can only have one Profile Picture; adding a new one will remove the old one.
     * @type {Array<ConstituentMergeModelAllOfCroppedCustomProfileImage>}
     * @memberof HouseholdInputModelAllOfHead
     */
    fullCustomProfileImage?: Array<ConstituentMergeModelAllOfCroppedCustomProfileImage>;
    /**
     * The cropped picture File Attachment. Note that a Constituent can only have one Profile Picture; adding a new one will remove the old one.
     * @type {Array<ConstituentMergeModelAllOfCroppedCustomProfileImage>}
     * @memberof HouseholdInputModelAllOfHead
     */
    croppedCustomProfileImage?: Array<ConstituentMergeModelAllOfCroppedCustomProfileImage>;
    /**
     * 
     * @type {Array<ConstituentMergeModelAllOfCustomValues>}
     * @memberof HouseholdInputModelAllOfHead
     */
    customValues?: Array<ConstituentMergeModelAllOfCustomValues>;
}

/**
* @export
* @enum {string}
*/
export enum HouseholdInputModelAllOfHeadTypeEnum {
    Individual = 'Individual',
    Organization = 'Organization'
}
/**
* @export
* @enum {string}
*/
export enum HouseholdInputModelAllOfHeadStatusEnum {
    Active = 'Active',
    Inactive = 'Inactive',
    Deceased = 'Deceased'
}
/**
* @export
* @enum {string}
*/
export enum HouseholdInputModelAllOfHeadGenderEnum {
    Male = 'Male',
    Female = 'Female',
    Other = 'Other'
}
/**
* @export
* @enum {string}
*/
export enum HouseholdInputModelAllOfHeadProfilePictureTypeEnum {
    None = 'None',
    Custom = 'Custom',
    Twitter = 'Twitter'
}


/**
 * Check if a given object implements the HouseholdInputModelAllOfHead interface.
 */
export function instanceOfHouseholdInputModelAllOfHead(value: object): value is HouseholdInputModelAllOfHead {
    return true;
}

export function HouseholdInputModelAllOfHeadFromJSON(json: any): HouseholdInputModelAllOfHead {
    return HouseholdInputModelAllOfHeadFromJSONTyped(json, false);
}

export function HouseholdInputModelAllOfHeadFromJSONTyped(json: any, ignoreDiscriminator: boolean): HouseholdInputModelAllOfHead {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['Type'] == null ? undefined : json['Type'],
        'status': json['Status'] == null ? undefined : json['Status'],
        'firstName': json['FirstName'] == null ? undefined : json['FirstName'],
        'lastName': json['LastName'] == null ? undefined : json['LastName'],
        'middleName': json['MiddleName'] == null ? undefined : json['MiddleName'],
        'prefix': json['Prefix'] == null ? undefined : json['Prefix'],
        'suffix': json['Suffix'] == null ? undefined : json['Suffix'],
        'fullName': json['FullName'] == null ? undefined : json['FullName'],
        'informalName': json['InformalName'] == null ? undefined : json['InformalName'],
        'formalName': json['FormalName'] == null ? undefined : json['FormalName'],
        'envelopeName': json['EnvelopeName'] == null ? undefined : json['EnvelopeName'],
        'recognitionName': json['RecognitionName'] == null ? undefined : json['RecognitionName'],
        'jobTitle': json['JobTitle'] == null ? undefined : json['JobTitle'],
        'employer': json['Employer'] == null ? undefined : json['Employer'],
        'website': json['Website'] == null ? undefined : json['Website'],
        'facebookId': json['FacebookId'] == null ? undefined : json['FacebookId'],
        'twitterId': json['TwitterId'] == null ? undefined : json['TwitterId'],
        'linkedInId': json['LinkedInId'] == null ? undefined : json['LinkedInId'],
        'gender': json['Gender'] == null ? undefined : json['Gender'],
        'birthdate': json['Birthdate'] == null ? undefined : (new Date(json['Birthdate'])),
        'profilePictureType': json['ProfilePictureType'] == null ? undefined : json['ProfilePictureType'],
        'primaryPhone': json['PrimaryPhone'] == null ? undefined : ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhoneFromJSON(json['PrimaryPhone']),
        'primaryAddress': json['PrimaryAddress'] == null ? undefined : ConstituentPostRequestAllOfAllOfPrimaryAddressFromJSON(json['PrimaryAddress']),
        'secondaryAddresses': json['SecondaryAddresses'] == null ? undefined : ((json['SecondaryAddresses'] as Array<any>).map(ConstituentPostRequestAllOfAllOfPrimaryAddressFromJSON)),
        'secondaryEmails': json['SecondaryEmails'] == null ? undefined : ((json['SecondaryEmails'] as Array<any>).map(ConstituentPostRequestAllOfAllOfSecondaryEmailsInnerFromJSON)),
        'secondaryPhones': json['SecondaryPhones'] == null ? undefined : ((json['SecondaryPhones'] as Array<any>).map(ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhoneFromJSON)),
        'fullCustomProfileImage': json['FullCustomProfileImage'] == null ? undefined : ((json['FullCustomProfileImage'] as Array<any>).map(ConstituentMergeModelAllOfCroppedCustomProfileImageFromJSON)),
        'croppedCustomProfileImage': json['CroppedCustomProfileImage'] == null ? undefined : ((json['CroppedCustomProfileImage'] as Array<any>).map(ConstituentMergeModelAllOfCroppedCustomProfileImageFromJSON)),
        'customValues': json['CustomValues'] == null ? undefined : ((json['CustomValues'] as Array<any>).map(ConstituentMergeModelAllOfCustomValuesFromJSON)),
    };
}

export function HouseholdInputModelAllOfHeadToJSON(json: any): HouseholdInputModelAllOfHead {
    return HouseholdInputModelAllOfHeadToJSONTyped(json, false);
}

export function HouseholdInputModelAllOfHeadToJSONTyped(value?: HouseholdInputModelAllOfHead | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Type': value['type'],
        'Status': value['status'],
        'FirstName': value['firstName'],
        'LastName': value['lastName'],
        'MiddleName': value['middleName'],
        'Prefix': value['prefix'],
        'Suffix': value['suffix'],
        'FullName': value['fullName'],
        'InformalName': value['informalName'],
        'FormalName': value['formalName'],
        'EnvelopeName': value['envelopeName'],
        'RecognitionName': value['recognitionName'],
        'JobTitle': value['jobTitle'],
        'Employer': value['employer'],
        'Website': value['website'],
        'FacebookId': value['facebookId'],
        'TwitterId': value['twitterId'],
        'LinkedInId': value['linkedInId'],
        'Gender': value['gender'],
        'Birthdate': value['birthdate'] == null ? undefined : ((value['birthdate']).toISOString().substring(0,10)),
        'ProfilePictureType': value['profilePictureType'],
        'PrimaryPhone': ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhoneToJSON(value['primaryPhone']),
        'PrimaryAddress': ConstituentPostRequestAllOfAllOfPrimaryAddressToJSON(value['primaryAddress']),
        'SecondaryAddresses': value['secondaryAddresses'] == null ? undefined : ((value['secondaryAddresses'] as Array<any>).map(ConstituentPostRequestAllOfAllOfPrimaryAddressToJSON)),
        'SecondaryEmails': value['secondaryEmails'] == null ? undefined : ((value['secondaryEmails'] as Array<any>).map(ConstituentPostRequestAllOfAllOfSecondaryEmailsInnerToJSON)),
        'SecondaryPhones': value['secondaryPhones'] == null ? undefined : ((value['secondaryPhones'] as Array<any>).map(ConstituentsGet200ResponseAllOfResultsInnerAllOfAllOfPrimaryPhoneToJSON)),
        'FullCustomProfileImage': value['fullCustomProfileImage'] == null ? undefined : ((value['fullCustomProfileImage'] as Array<any>).map(ConstituentMergeModelAllOfCroppedCustomProfileImageToJSON)),
        'CroppedCustomProfileImage': value['croppedCustomProfileImage'] == null ? undefined : ((value['croppedCustomProfileImage'] as Array<any>).map(ConstituentMergeModelAllOfCroppedCustomProfileImageToJSON)),
        'CustomValues': value['customValues'] == null ? undefined : ((value['customValues'] as Array<any>).map(ConstituentMergeModelAllOfCustomValuesToJSON)),
    };
}

export const HouseholdInputModelAllOfHeadPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

