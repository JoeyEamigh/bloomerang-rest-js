/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HouseholdPostRequestAllOfAllOfHead } from './HouseholdPostRequestAllOfAllOfHead';
import {
    HouseholdPostRequestAllOfAllOfHeadFromJSON,
    HouseholdPostRequestAllOfAllOfHeadFromJSONTyped,
    HouseholdPostRequestAllOfAllOfHeadToJSON,
    HouseholdPostRequestAllOfAllOfHeadToJSONTyped,
} from './HouseholdPostRequestAllOfAllOfHead';

/**
 * 
 * @export
 * @interface HouseholdPostRequest
 */
export interface HouseholdPostRequest {
    /**
     * 
     * @type {string}
     * @memberof HouseholdPostRequest
     */
    fullName: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdPostRequest
     */
    sortName: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdPostRequest
     */
    informalName: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdPostRequest
     */
    formalName: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdPostRequest
     */
    envelopeName: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdPostRequest
     */
    recognitionName: string;
    /**
     * 
     * @type {HouseholdPostRequestAllOfAllOfHead}
     * @memberof HouseholdPostRequest
     */
    head: HouseholdPostRequestAllOfAllOfHead;
    /**
     * 
     * @type {Array<HouseholdPostRequestAllOfAllOfHead>}
     * @memberof HouseholdPostRequest
     */
    members?: Array<HouseholdPostRequestAllOfAllOfHead>;
}

/**
 * Check if a given object implements the HouseholdPostRequest interface.
 */
export function instanceOfHouseholdPostRequest(value: object): value is HouseholdPostRequest {
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('sortName' in value) || value['sortName'] === undefined) return false;
    if (!('informalName' in value) || value['informalName'] === undefined) return false;
    if (!('formalName' in value) || value['formalName'] === undefined) return false;
    if (!('envelopeName' in value) || value['envelopeName'] === undefined) return false;
    if (!('recognitionName' in value) || value['recognitionName'] === undefined) return false;
    if (!('head' in value) || value['head'] === undefined) return false;
    return true;
}

export function HouseholdPostRequestFromJSON(json: any): HouseholdPostRequest {
    return HouseholdPostRequestFromJSONTyped(json, false);
}

export function HouseholdPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): HouseholdPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'fullName': json['FullName'],
        'sortName': json['SortName'],
        'informalName': json['InformalName'],
        'formalName': json['FormalName'],
        'envelopeName': json['EnvelopeName'],
        'recognitionName': json['RecognitionName'],
        'head': HouseholdPostRequestAllOfAllOfHeadFromJSON(json['Head']),
        'members': json['Members'] == null ? undefined : ((json['Members'] as Array<any>).map(HouseholdPostRequestAllOfAllOfHeadFromJSON)),
    };
}

export function HouseholdPostRequestToJSON(json: any): HouseholdPostRequest {
    return HouseholdPostRequestToJSONTyped(json, false);
}

export function HouseholdPostRequestToJSONTyped(value?: HouseholdPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'FullName': value['fullName'],
        'SortName': value['sortName'],
        'InformalName': value['informalName'],
        'FormalName': value['formalName'],
        'EnvelopeName': value['envelopeName'],
        'RecognitionName': value['recognitionName'],
        'Head': HouseholdPostRequestAllOfAllOfHeadToJSON(value['head']),
        'Members': value['members'] == null ? undefined : ((value['members'] as Array<any>).map(HouseholdPostRequestAllOfAllOfHeadToJSON)),
    };
}

export const HouseholdPostRequestPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

