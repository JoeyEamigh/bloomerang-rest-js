/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail } from './CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail';
import {
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailFromJSON,
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailFromJSONTyped,
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailToJSON,
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailToJSONTyped,
} from './CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail';

/**
 * 
 * @export
 * @interface PagedAddressListAllOfResults
 */
export interface PagedAddressListAllOfResults {
    /**
     * 
     * @type {number}
     * @memberof PagedAddressListAllOfResults
     */
    id?: number;
    /**
     * The ID of the constituent used in the API (not to be confused with accountNumber)
     * @type {number}
     * @memberof PagedAddressListAllOfResults
     */
    accountId?: number;
    /**
     * 
     * @type {string}
     * @memberof PagedAddressListAllOfResults
     */
    type?: PagedAddressListAllOfResultsTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PagedAddressListAllOfResults
     */
    street?: string;
    /**
     * 
     * @type {string}
     * @memberof PagedAddressListAllOfResults
     */
    city?: string;
    /**
     * Must match a state in the Bloomerang CRM
     * @type {string}
     * @memberof PagedAddressListAllOfResults
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof PagedAddressListAllOfResults
     */
    postalCode?: string;
    /**
     * Must match a state in the Bloomerang CRM
     * @type {string}
     * @memberof PagedAddressListAllOfResults
     */
    country?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PagedAddressListAllOfResults
     */
    isPrimary?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagedAddressListAllOfResults
     */
    isBad?: boolean;
    /**
     * 
     * @type {CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail}
     * @memberof PagedAddressListAllOfResults
     */
    auditTrail?: CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail;
    /**
     * The 2-3 letter abbreviation for the state/province
     * @type {string}
     * @memberof PagedAddressListAllOfResults
     */
    stateAbbreviation?: string;
    /**
     * The 2 letter ISO code for the country
     * @type {string}
     * @memberof PagedAddressListAllOfResults
     */
    countryCode?: string;
}

/**
* @export
* @enum {string}
*/
export enum PagedAddressListAllOfResultsTypeEnum {
    Home = 'Home',
    Vacation = 'Vacation',
    Work = 'Work'
}


/**
 * Check if a given object implements the PagedAddressListAllOfResults interface.
 */
export function instanceOfPagedAddressListAllOfResults(value: object): value is PagedAddressListAllOfResults {
    return true;
}

export function PagedAddressListAllOfResultsFromJSON(json: any): PagedAddressListAllOfResults {
    return PagedAddressListAllOfResultsFromJSONTyped(json, false);
}

export function PagedAddressListAllOfResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedAddressListAllOfResults {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['Id'] == null ? undefined : json['Id'],
        'accountId': json['AccountId'] == null ? undefined : json['AccountId'],
        'type': json['Type'] == null ? undefined : json['Type'],
        'street': json['Street'] == null ? undefined : json['Street'],
        'city': json['City'] == null ? undefined : json['City'],
        'state': json['State'] == null ? undefined : json['State'],
        'postalCode': json['PostalCode'] == null ? undefined : json['PostalCode'],
        'country': json['Country'] == null ? undefined : json['Country'],
        'isPrimary': json['IsPrimary'] == null ? undefined : json['IsPrimary'],
        'isBad': json['IsBad'] == null ? undefined : json['IsBad'],
        'auditTrail': json['AuditTrail'] == null ? undefined : CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailFromJSON(json['AuditTrail']),
        'stateAbbreviation': json['StateAbbreviation'] == null ? undefined : json['StateAbbreviation'],
        'countryCode': json['CountryCode'] == null ? undefined : json['CountryCode'],
    };
}

export function PagedAddressListAllOfResultsToJSON(json: any): PagedAddressListAllOfResults {
    return PagedAddressListAllOfResultsToJSONTyped(json, false);
}

export function PagedAddressListAllOfResultsToJSONTyped(value?: PagedAddressListAllOfResults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Id': value['id'],
        'AccountId': value['accountId'],
        'Type': value['type'],
        'Street': value['street'],
        'City': value['city'],
        'State': value['state'],
        'PostalCode': value['postalCode'],
        'Country': value['country'],
        'IsPrimary': value['isPrimary'],
        'IsBad': value['isBad'],
        'AuditTrail': CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailToJSON(value['auditTrail']),
        'StateAbbreviation': value['stateAbbreviation'],
        'CountryCode': value['countryCode'],
    };
}

export const PagedAddressListAllOfResultsPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

