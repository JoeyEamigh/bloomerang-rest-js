/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DonorSearchInfo
 */
export interface DonorSearchInfo {
    /**
     * 
     * @type {number}
     * @memberof DonorSearchInfo
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof DonorSearchInfo
     */
    generosityScore?: DonorSearchInfoGenerosityScoreEnum;
    /**
     * 
     * @type {string}
     * @memberof DonorSearchInfo
     */
    annualFundLikelihood?: DonorSearchInfoAnnualFundLikelihoodEnum;
    /**
     * 
     * @type {string}
     * @memberof DonorSearchInfo
     */
    majorGiftLikelihood?: DonorSearchInfoMajorGiftLikelihoodEnum;
    /**
     * 
     * @type {string}
     * @memberof DonorSearchInfo
     */
    quality?: DonorSearchInfoQualityEnum;
    /**
     * 
     * @type {number}
     * @memberof DonorSearchInfo
     */
    largestGiftMin?: number;
    /**
     * 
     * @type {number}
     * @memberof DonorSearchInfo
     */
    largestGiftMax?: number;
    /**
     * 
     * @type {number}
     * @memberof DonorSearchInfo
     */
    wealthAskMin?: number;
    /**
     * 
     * @type {number}
     * @memberof DonorSearchInfo
     */
    wealthAskMax?: number;
    /**
     * 
     * @type {boolean}
     * @memberof DonorSearchInfo
     */
    businessExecutive?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DonorSearchInfo
     */
    namesScreened?: string;
    /**
     * 
     * @type {string}
     * @memberof DonorSearchInfo
     */
    dateTimeScreenedUtc?: string;
}

/**
* @export
* @enum {string}
*/
export enum DonorSearchInfoGenerosityScoreEnum {
    Low = 'Low',
    MediumLow = 'MediumLow',
    Medium = 'Medium',
    MediumHigh = 'MediumHigh',
    High = 'High',
    NotScanned = 'NotScanned'
}
/**
* @export
* @enum {string}
*/
export enum DonorSearchInfoAnnualFundLikelihoodEnum {
    Low = 'Low',
    MediumLow = 'MediumLow',
    Medium = 'Medium',
    MediumHigh = 'MediumHigh',
    High = 'High',
    NotScanned = 'NotScanned'
}
/**
* @export
* @enum {string}
*/
export enum DonorSearchInfoMajorGiftLikelihoodEnum {
    Low = 'Low',
    MediumLow = 'MediumLow',
    Medium = 'Medium',
    MediumHigh = 'MediumHigh',
    High = 'High',
    NotScanned = 'NotScanned'
}
/**
* @export
* @enum {string}
*/
export enum DonorSearchInfoQualityEnum {
    Low = 'Low',
    High = 'High'
}


/**
 * Check if a given object implements the DonorSearchInfo interface.
 */
export function instanceOfDonorSearchInfo(value: object): value is DonorSearchInfo {
    return true;
}

export function DonorSearchInfoFromJSON(json: any): DonorSearchInfo {
    return DonorSearchInfoFromJSONTyped(json, false);
}

export function DonorSearchInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DonorSearchInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['Id'] == null ? undefined : json['Id'],
        'generosityScore': json['GenerosityScore'] == null ? undefined : json['GenerosityScore'],
        'annualFundLikelihood': json['AnnualFundLikelihood'] == null ? undefined : json['AnnualFundLikelihood'],
        'majorGiftLikelihood': json['MajorGiftLikelihood'] == null ? undefined : json['MajorGiftLikelihood'],
        'quality': json['Quality'] == null ? undefined : json['Quality'],
        'largestGiftMin': json['LargestGiftMin'] == null ? undefined : json['LargestGiftMin'],
        'largestGiftMax': json['LargestGiftMax'] == null ? undefined : json['LargestGiftMax'],
        'wealthAskMin': json['WealthAskMin'] == null ? undefined : json['WealthAskMin'],
        'wealthAskMax': json['WealthAskMax'] == null ? undefined : json['WealthAskMax'],
        'businessExecutive': json['BusinessExecutive'] == null ? undefined : json['BusinessExecutive'],
        'namesScreened': json['NamesScreened'] == null ? undefined : json['NamesScreened'],
        'dateTimeScreenedUtc': json['DateTimeScreenedUtc'] == null ? undefined : json['DateTimeScreenedUtc'],
    };
}

export function DonorSearchInfoToJSON(json: any): DonorSearchInfo {
    return DonorSearchInfoToJSONTyped(json, false);
}

export function DonorSearchInfoToJSONTyped(value?: DonorSearchInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Id': value['id'],
        'GenerosityScore': value['generosityScore'],
        'AnnualFundLikelihood': value['annualFundLikelihood'],
        'MajorGiftLikelihood': value['majorGiftLikelihood'],
        'Quality': value['quality'],
        'LargestGiftMin': value['largestGiftMin'],
        'LargestGiftMax': value['largestGiftMax'],
        'WealthAskMin': value['wealthAskMin'],
        'WealthAskMax': value['wealthAskMax'],
        'BusinessExecutive': value['businessExecutive'],
        'NamesScreened': value['namesScreened'],
        'DateTimeScreenedUtc': value['dateTimeScreenedUtc'],
    };
}

export const DonorSearchInfoPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

