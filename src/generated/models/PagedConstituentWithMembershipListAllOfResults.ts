/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PagedConstituentWithMembershipListAllOfMembership } from './PagedConstituentWithMembershipListAllOfMembership';
import {
    PagedConstituentWithMembershipListAllOfMembershipFromJSON,
    PagedConstituentWithMembershipListAllOfMembershipFromJSONTyped,
    PagedConstituentWithMembershipListAllOfMembershipToJSON,
    PagedConstituentWithMembershipListAllOfMembershipToJSONTyped,
} from './PagedConstituentWithMembershipListAllOfMembership';

/**
 * 
 * @export
 * @interface PagedConstituentWithMembershipListAllOfResults
 */
export interface PagedConstituentWithMembershipListAllOfResults {
    /**
     * 
     * @type {Array<PagedConstituentWithMembershipListAllOfMembership>}
     * @memberof PagedConstituentWithMembershipListAllOfResults
     */
    membership?: Array<PagedConstituentWithMembershipListAllOfMembership>;
}

/**
 * Check if a given object implements the PagedConstituentWithMembershipListAllOfResults interface.
 */
export function instanceOfPagedConstituentWithMembershipListAllOfResults(value: object): value is PagedConstituentWithMembershipListAllOfResults {
    return true;
}

export function PagedConstituentWithMembershipListAllOfResultsFromJSON(json: any): PagedConstituentWithMembershipListAllOfResults {
    return PagedConstituentWithMembershipListAllOfResultsFromJSONTyped(json, false);
}

export function PagedConstituentWithMembershipListAllOfResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedConstituentWithMembershipListAllOfResults {
    if (json == null) {
        return json;
    }
    return {
        
        'membership': json['Membership'] == null ? undefined : ((json['Membership'] as Array<any>).map(PagedConstituentWithMembershipListAllOfMembershipFromJSON)),
    };
}

export function PagedConstituentWithMembershipListAllOfResultsToJSON(json: any): PagedConstituentWithMembershipListAllOfResults {
    return PagedConstituentWithMembershipListAllOfResultsToJSONTyped(json, false);
}

export function PagedConstituentWithMembershipListAllOfResultsToJSONTyped(value?: PagedConstituentWithMembershipListAllOfResults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Membership': value['membership'] == null ? undefined : ((value['membership'] as Array<any>).map(PagedConstituentWithMembershipListAllOfMembershipToJSON)),
    };
}

export const PagedConstituentWithMembershipListAllOfResultsPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

