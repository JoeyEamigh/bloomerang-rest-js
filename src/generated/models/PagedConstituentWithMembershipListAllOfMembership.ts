/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PagedConstituentWithMembershipListAllOfMembership
 */
export interface PagedConstituentWithMembershipListAllOfMembership {
    /**
     * 
     * @type {number}
     * @memberof PagedConstituentWithMembershipListAllOfMembership
     */
    membershipScheduleId?: number;
    /**
     * 
     * @type {string}
     * @memberof PagedConstituentWithMembershipListAllOfMembership
     */
    membershipProgramName?: string;
    /**
     * 
     * @type {string}
     * @memberof PagedConstituentWithMembershipListAllOfMembership
     */
    membershipLevelName?: string;
    /**
     * 
     * @type {string}
     * @memberof PagedConstituentWithMembershipListAllOfMembership
     */
    membershipStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof PagedConstituentWithMembershipListAllOfMembership
     */
    membershipRenewalDate?: string;
}

/**
 * Check if a given object implements the PagedConstituentWithMembershipListAllOfMembership interface.
 */
export function instanceOfPagedConstituentWithMembershipListAllOfMembership(value: object): value is PagedConstituentWithMembershipListAllOfMembership {
    return true;
}

export function PagedConstituentWithMembershipListAllOfMembershipFromJSON(json: any): PagedConstituentWithMembershipListAllOfMembership {
    return PagedConstituentWithMembershipListAllOfMembershipFromJSONTyped(json, false);
}

export function PagedConstituentWithMembershipListAllOfMembershipFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedConstituentWithMembershipListAllOfMembership {
    if (json == null) {
        return json;
    }
    return {
        
        'membershipScheduleId': json['MembershipScheduleId'] == null ? undefined : json['MembershipScheduleId'],
        'membershipProgramName': json['MembershipProgramName'] == null ? undefined : json['MembershipProgramName'],
        'membershipLevelName': json['MembershipLevelName'] == null ? undefined : json['MembershipLevelName'],
        'membershipStatus': json['MembershipStatus'] == null ? undefined : json['MembershipStatus'],
        'membershipRenewalDate': json['MembershipRenewalDate'] == null ? undefined : json['MembershipRenewalDate'],
    };
}

export function PagedConstituentWithMembershipListAllOfMembershipToJSON(json: any): PagedConstituentWithMembershipListAllOfMembership {
    return PagedConstituentWithMembershipListAllOfMembershipToJSONTyped(json, false);
}

export function PagedConstituentWithMembershipListAllOfMembershipToJSONTyped(value?: PagedConstituentWithMembershipListAllOfMembership | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'MembershipScheduleId': value['membershipScheduleId'],
        'MembershipProgramName': value['membershipProgramName'],
        'MembershipLevelName': value['membershipLevelName'],
        'MembershipStatus': value['membershipStatus'],
        'MembershipRenewalDate': value['membershipRenewalDate'],
    };
}

export const PagedConstituentWithMembershipListAllOfMembershipPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

