/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NoteCreateModel
 */
export interface NoteCreateModel {
    /**
     * The ID of the constituent used in the API (not to be confused with accountNumber)
     * @type {number}
     * @memberof NoteCreateModel
     */
    accountId: number;
    /**
     * 
     * @type {Date}
     * @memberof NoteCreateModel
     */
    date: Date;
    /**
     * 
     * @type {string}
     * @memberof NoteCreateModel
     */
    note: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof NoteCreateModel
     */
    customValues?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof NoteCreateModel
     */
    attachments?: Array<object>;
}

/**
 * Check if a given object implements the NoteCreateModel interface.
 */
export function instanceOfNoteCreateModel(value: object): value is NoteCreateModel {
    if (!('accountId' in value) || value['accountId'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('note' in value) || value['note'] === undefined) return false;
    return true;
}

export function NoteCreateModelFromJSON(json: any): NoteCreateModel {
    return NoteCreateModelFromJSONTyped(json, false);
}

export function NoteCreateModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): NoteCreateModel {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['AccountId'],
        'date': (new Date(json['Date'])),
        'note': json['Note'],
        'customValues': json['CustomValues'] == null ? undefined : json['CustomValues'],
        'attachments': json['Attachments'] == null ? undefined : json['Attachments'],
    };
}

export function NoteCreateModelToJSON(json: any): NoteCreateModel {
    return NoteCreateModelToJSONTyped(json, false);
}

export function NoteCreateModelToJSONTyped(value?: NoteCreateModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'AccountId': value['accountId'],
        'Date': ((value['date']).toISOString().substring(0,10)),
        'Note': value['note'],
        'CustomValues': value['customValues'],
        'Attachments': value['attachments'],
    };
}

export const NoteCreateModelPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

