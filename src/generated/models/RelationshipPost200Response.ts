/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RelationshipPost200ResponseRelationshipRole1 } from './RelationshipPost200ResponseRelationshipRole1';
import {
    RelationshipPost200ResponseRelationshipRole1FromJSON,
    RelationshipPost200ResponseRelationshipRole1FromJSONTyped,
    RelationshipPost200ResponseRelationshipRole1ToJSON,
    RelationshipPost200ResponseRelationshipRole1ToJSONTyped,
} from './RelationshipPost200ResponseRelationshipRole1';

/**
 * 
 * @export
 * @interface RelationshipPost200Response
 */
export interface RelationshipPost200Response {
    /**
     * 
     * @type {RelationshipPost200ResponseRelationshipRole1}
     * @memberof RelationshipPost200Response
     */
    relationshipRole1?: RelationshipPost200ResponseRelationshipRole1;
    /**
     * 
     * @type {RelationshipPost200ResponseRelationshipRole1}
     * @memberof RelationshipPost200Response
     */
    relationshipRole2?: RelationshipPost200ResponseRelationshipRole1;
    /**
     * 
     * @type {number}
     * @memberof RelationshipPost200Response
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof RelationshipPost200Response
     */
    accountId1?: number;
    /**
     * 
     * @type {number}
     * @memberof RelationshipPost200Response
     */
    accountId2?: number;
    /**
     * 
     * @type {string}
     * @memberof RelationshipPost200Response
     */
    note?: string;
}

/**
 * Check if a given object implements the RelationshipPost200Response interface.
 */
export function instanceOfRelationshipPost200Response(value: object): value is RelationshipPost200Response {
    return true;
}

export function RelationshipPost200ResponseFromJSON(json: any): RelationshipPost200Response {
    return RelationshipPost200ResponseFromJSONTyped(json, false);
}

export function RelationshipPost200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelationshipPost200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'relationshipRole1': json['RelationshipRole1'] == null ? undefined : RelationshipPost200ResponseRelationshipRole1FromJSON(json['RelationshipRole1']),
        'relationshipRole2': json['RelationshipRole2'] == null ? undefined : RelationshipPost200ResponseRelationshipRole1FromJSON(json['RelationshipRole2']),
        'id': json['Id'] == null ? undefined : json['Id'],
        'accountId1': json['AccountId1'] == null ? undefined : json['AccountId1'],
        'accountId2': json['AccountId2'] == null ? undefined : json['AccountId2'],
        'note': json['Note'] == null ? undefined : json['Note'],
    };
}

export function RelationshipPost200ResponseToJSON(json: any): RelationshipPost200Response {
    return RelationshipPost200ResponseToJSONTyped(json, false);
}

export function RelationshipPost200ResponseToJSONTyped(value?: RelationshipPost200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'RelationshipRole1': RelationshipPost200ResponseRelationshipRole1ToJSON(value['relationshipRole1']),
        'RelationshipRole2': RelationshipPost200ResponseRelationshipRole1ToJSON(value['relationshipRole2']),
        'Id': value['id'],
        'AccountId1': value['accountId1'],
        'AccountId2': value['accountId2'],
        'Note': value['note'],
    };
}

export const RelationshipPost200ResponsePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

