/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PhoneCreateModel
 */
export interface PhoneCreateModel {
    /**
     * 
     * @type {number}
     * @memberof PhoneCreateModel
     */
    id?: number;
    /**
     * The ID of the constituent used in the API (not to be confused with accountNumber)
     * @type {number}
     * @memberof PhoneCreateModel
     */
    accountId?: number;
    /**
     * 
     * @type {string}
     * @memberof PhoneCreateModel
     */
    type: PhoneCreateModelTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PhoneCreateModel
     */
    extension?: string;
    /**
     * The phone number including formatting but not the extension
     * @type {string}
     * @memberof PhoneCreateModel
     */
    number: string;
    /**
     * 
     * @type {boolean}
     * @memberof PhoneCreateModel
     */
    isPrimary?: boolean;
}

/**
* @export
* @enum {string}
*/
export enum PhoneCreateModelTypeEnum {
    Home = 'Home',
    Work = 'Work',
    Mobile = 'Mobile',
    Fax = 'Fax'
}


/**
 * Check if a given object implements the PhoneCreateModel interface.
 */
export function instanceOfPhoneCreateModel(value: object): value is PhoneCreateModel {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('number' in value) || value['number'] === undefined) return false;
    return true;
}

export function PhoneCreateModelFromJSON(json: any): PhoneCreateModel {
    return PhoneCreateModelFromJSONTyped(json, false);
}

export function PhoneCreateModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhoneCreateModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['Id'] == null ? undefined : json['Id'],
        'accountId': json['AccountId'] == null ? undefined : json['AccountId'],
        'type': json['Type'],
        'extension': json['Extension'] == null ? undefined : json['Extension'],
        'number': json['Number'],
        'isPrimary': json['IsPrimary'] == null ? undefined : json['IsPrimary'],
    };
}

export function PhoneCreateModelToJSON(json: any): PhoneCreateModel {
    return PhoneCreateModelToJSONTyped(json, false);
}

export function PhoneCreateModelToJSONTyped(value?: PhoneCreateModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Id': value['id'],
        'AccountId': value['accountId'],
        'Type': value['type'],
        'Extension': value['extension'],
        'Number': value['number'],
        'IsPrimary': value['isPrimary'],
    };
}

export const PhoneCreateModelPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

