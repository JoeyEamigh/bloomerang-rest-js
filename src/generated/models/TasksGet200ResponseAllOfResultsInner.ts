/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail } from './CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail';
import {
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailFromJSON,
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailFromJSONTyped,
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailToJSON,
    CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailToJSONTyped,
} from './CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail';

/**
 * 
 * @export
 * @interface TasksGet200ResponseAllOfResultsInner
 */
export interface TasksGet200ResponseAllOfResultsInner {
    /**
     * 
     * @type {number}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    id?: number;
    /**
     * The ID of the constituent used in the API (not to be confused with accountNumber)
     * @type {number}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    accountId?: number;
    /**
     * 
     * @type {string}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    status?: TasksGet200ResponseAllOfResultsInnerStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    completedDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    dueDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    subject?: string;
    /**
     * 
     * @type {string}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    note?: string;
    /**
     * 
     * @type {string}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    channel?: TasksGet200ResponseAllOfResultsInnerChannelEnum;
    /**
     * 
     * @type {string}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    purpose?: TasksGet200ResponseAllOfResultsInnerPurposeEnum;
    /**
     * The ID of the user assigned to this task
     * @type {number}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    userId?: number;
    /**
     * The ID of the interaction created by the completion of this task
     * @type {number}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    interactionId?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    attachmentIds?: Array<number>;
    /**
     * 
     * @type {CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail}
     * @memberof TasksGet200ResponseAllOfResultsInner
     */
    auditTrail?: CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrail;
}

/**
* @export
* @enum {string}
*/
export enum TasksGet200ResponseAllOfResultsInnerStatusEnum {
    Active = 'Active',
    Complete = 'Complete',
    Archived = 'Archived'
}
/**
* @export
* @enum {string}
*/
export enum TasksGet200ResponseAllOfResultsInnerChannelEnum {
    Email = 'Email',
    MassEmail = 'MassEmail',
    Phone = 'Phone',
    TextMessage = 'TextMessage',
    Mail = 'Mail',
    InPerson = 'InPerson',
    SocialMedia = 'SocialMedia',
    Website = 'Website',
    Twitter = 'Twitter',
    Other = 'Other',
    EngagementSurveyEmail = 'EngagementSurveyEmail',
    EngagementSurvey = 'EngagementSurvey'
}
/**
* @export
* @enum {string}
*/
export enum TasksGet200ResponseAllOfResultsInnerPurposeEnum {
    Acknowledgement = 'Acknowledgement',
    ImpactCultivation = 'ImpactCultivation',
    Newsletter = 'Newsletter',
    Receipt = 'Receipt',
    Solicitation = 'Solicitation',
    SpecialEvent = 'SpecialEvent',
    VolunteerActivity = 'VolunteerActivity',
    PledgeReminder = 'PledgeReminder',
    Welcome = 'Welcome',
    BenevonPointOfEntry = 'BenevonPointOfEntry',
    BenevonFollowUp = 'BenevonFollowUp',
    BenevonAskEvent = 'BenevonAskEvent',
    BenevonOneOnOneAsk = 'BenevonOneOnOneAsk',
    BenevonOngoingCultivation = 'BenevonOngoingCultivation',
    Other = 'Other'
}


/**
 * Check if a given object implements the TasksGet200ResponseAllOfResultsInner interface.
 */
export function instanceOfTasksGet200ResponseAllOfResultsInner(value: object): value is TasksGet200ResponseAllOfResultsInner {
    return true;
}

export function TasksGet200ResponseAllOfResultsInnerFromJSON(json: any): TasksGet200ResponseAllOfResultsInner {
    return TasksGet200ResponseAllOfResultsInnerFromJSONTyped(json, false);
}

export function TasksGet200ResponseAllOfResultsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TasksGet200ResponseAllOfResultsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['Id'] == null ? undefined : json['Id'],
        'accountId': json['AccountId'] == null ? undefined : json['AccountId'],
        'status': json['Status'] == null ? undefined : json['Status'],
        'completedDate': json['CompletedDate'] == null ? undefined : (new Date(json['CompletedDate'])),
        'dueDate': json['DueDate'] == null ? undefined : (new Date(json['DueDate'])),
        'subject': json['Subject'] == null ? undefined : json['Subject'],
        'note': json['Note'] == null ? undefined : json['Note'],
        'channel': json['Channel'] == null ? undefined : json['Channel'],
        'purpose': json['Purpose'] == null ? undefined : json['Purpose'],
        'userId': json['UserId'] == null ? undefined : json['UserId'],
        'interactionId': json['InteractionId'] == null ? undefined : json['InteractionId'],
        'attachmentIds': json['AttachmentIds'] == null ? undefined : json['AttachmentIds'],
        'auditTrail': json['AuditTrail'] == null ? undefined : CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailFromJSON(json['AuditTrail']),
    };
}

export function TasksGet200ResponseAllOfResultsInnerToJSON(json: any): TasksGet200ResponseAllOfResultsInner {
    return TasksGet200ResponseAllOfResultsInnerToJSONTyped(json, false);
}

export function TasksGet200ResponseAllOfResultsInnerToJSONTyped(value?: TasksGet200ResponseAllOfResultsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Id': value['id'],
        'AccountId': value['accountId'],
        'Status': value['status'],
        'CompletedDate': value['completedDate'] == null ? undefined : ((value['completedDate']).toISOString().substring(0,10)),
        'DueDate': value['dueDate'] == null ? undefined : ((value['dueDate']).toISOString().substring(0,10)),
        'Subject': value['subject'],
        'Note': value['note'],
        'Channel': value['channel'],
        'Purpose': value['purpose'],
        'UserId': value['userId'],
        'InteractionId': value['interactionId'],
        'AttachmentIds': value['attachmentIds'],
        'AuditTrail': CampaignsGet200ResponseAllOfResultsInnerAllOfAuditTrailToJSON(value['auditTrail']),
    };
}

export const TasksGet200ResponseAllOfResultsInnerPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

