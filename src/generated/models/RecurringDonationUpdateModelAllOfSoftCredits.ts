/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { RecurringDonationCreateModelAllOfSoftCredits } from './RecurringDonationCreateModelAllOfSoftCredits';
import {
    instanceOfRecurringDonationCreateModelAllOfSoftCredits,
    RecurringDonationCreateModelAllOfSoftCreditsFromJSON,
    RecurringDonationCreateModelAllOfSoftCreditsFromJSONTyped,
    RecurringDonationCreateModelAllOfSoftCreditsToJSON,
} from './RecurringDonationCreateModelAllOfSoftCredits';
import type { TransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOf } from './TransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOf';
import {
    instanceOfTransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOf,
    TransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOfFromJSON,
    TransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOfFromJSONTyped,
    TransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOfToJSON,
} from './TransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOf';

/**
 * @type RecurringDonationUpdateModelAllOfSoftCredits
 * 
 * @export
 */
export type RecurringDonationUpdateModelAllOfSoftCredits = RecurringDonationCreateModelAllOfSoftCredits | TransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOf;

export function RecurringDonationUpdateModelAllOfSoftCreditsFromJSON(json: any): RecurringDonationUpdateModelAllOfSoftCredits {
    return RecurringDonationUpdateModelAllOfSoftCreditsFromJSONTyped(json, false);
}

export function RecurringDonationUpdateModelAllOfSoftCreditsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecurringDonationUpdateModelAllOfSoftCredits {
    if (json == null) {
        return json;
    }
    if (instanceOfRecurringDonationCreateModelAllOfSoftCredits(json)) {
        return RecurringDonationCreateModelAllOfSoftCreditsFromJSONTyped(json, true);
    }
    if (instanceOfTransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOf(json)) {
        return TransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOfFromJSONTyped(json, true);
    }

    return {} as any;
}

export function RecurringDonationUpdateModelAllOfSoftCreditsToJSON(json: any): any {
    return RecurringDonationUpdateModelAllOfSoftCreditsToJSONTyped(json, false);
}

export function RecurringDonationUpdateModelAllOfSoftCreditsToJSONTyped(value?: RecurringDonationUpdateModelAllOfSoftCredits | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfRecurringDonationCreateModelAllOfSoftCredits(value)) {
        return RecurringDonationCreateModelAllOfSoftCreditsToJSON(value as RecurringDonationCreateModelAllOfSoftCredits);
    }
    if (instanceOfTransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOf(value)) {
        return TransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOfToJSON(value as TransactionIdPutRequestAllOfDesignationsInnerOneOfAllOfSoftCreditsInnerOneOf);
    }

    return {};
}

