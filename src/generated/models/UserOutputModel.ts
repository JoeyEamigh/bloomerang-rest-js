/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserCurrentGet200ResponseAllOfUserTimeZone } from './UserCurrentGet200ResponseAllOfUserTimeZone';
import {
    UserCurrentGet200ResponseAllOfUserTimeZoneFromJSON,
    UserCurrentGet200ResponseAllOfUserTimeZoneFromJSONTyped,
    UserCurrentGet200ResponseAllOfUserTimeZoneToJSON,
    UserCurrentGet200ResponseAllOfUserTimeZoneToJSONTyped,
} from './UserCurrentGet200ResponseAllOfUserTimeZone';

/**
 * 
 * @export
 * @interface UserOutputModel
 */
export interface UserOutputModel {
    /**
     * 
     * @type {number}
     * @memberof UserOutputModel
     */
    id?: number;
    /**
     * The user's friendly name
     * @type {string}
     * @memberof UserOutputModel
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UserOutputModel
     */
    email?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserOutputModel
     */
    isActive?: boolean;
    /**
     * User preference that determines whether Bloomerang will send them Task Reminder emails
     * @type {boolean}
     * @memberof UserOutputModel
     */
    sendTaskEmails?: boolean;
    /**
     * The user's username
     * @type {string}
     * @memberof UserOutputModel
     */
    userName?: string;
    /**
     * An email address that will be used once the user verifies it
     * @type {string}
     * @memberof UserOutputModel
     */
    pendingEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof UserOutputModel
     */
    bccEmail?: string;
    /**
     * A representation of the user's level of permission
     * @type {string}
     * @memberof UserOutputModel
     */
    permissionLevel?: UserOutputModelPermissionLevelEnum;
    /**
     * 
     * @type {string}
     * @memberof UserOutputModel
     */
    phone?: string;
    /**
     * 
     * @type {UserCurrentGet200ResponseAllOfUserTimeZone}
     * @memberof UserOutputModel
     */
    userTimeZone?: UserCurrentGet200ResponseAllOfUserTimeZone;
}

/**
* @export
* @enum {string}
*/
export enum UserOutputModelPermissionLevelEnum {
    Admin = 'Admin',
    Standard = 'Standard',
    StandardEditFinancialData = 'StandardEditFinancialData'
}


/**
 * Check if a given object implements the UserOutputModel interface.
 */
export function instanceOfUserOutputModel(value: object): value is UserOutputModel {
    return true;
}

export function UserOutputModelFromJSON(json: any): UserOutputModel {
    return UserOutputModelFromJSONTyped(json, false);
}

export function UserOutputModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserOutputModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['Id'] == null ? undefined : json['Id'],
        'name': json['Name'] == null ? undefined : json['Name'],
        'email': json['Email'] == null ? undefined : json['Email'],
        'isActive': json['IsActive'] == null ? undefined : json['IsActive'],
        'sendTaskEmails': json['SendTaskEmails'] == null ? undefined : json['SendTaskEmails'],
        'userName': json['UserName'] == null ? undefined : json['UserName'],
        'pendingEmail': json['PendingEmail'] == null ? undefined : json['PendingEmail'],
        'bccEmail': json['BccEmail'] == null ? undefined : json['BccEmail'],
        'permissionLevel': json['PermissionLevel'] == null ? undefined : json['PermissionLevel'],
        'phone': json['Phone'] == null ? undefined : json['Phone'],
        'userTimeZone': json['UserTimeZone'] == null ? undefined : UserCurrentGet200ResponseAllOfUserTimeZoneFromJSON(json['UserTimeZone']),
    };
}

export function UserOutputModelToJSON(json: any): UserOutputModel {
    return UserOutputModelToJSONTyped(json, false);
}

export function UserOutputModelToJSONTyped(value?: UserOutputModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Id': value['id'],
        'Name': value['name'],
        'Email': value['email'],
        'IsActive': value['isActive'],
        'SendTaskEmails': value['sendTaskEmails'],
        'UserName': value['userName'],
        'PendingEmail': value['pendingEmail'],
        'BccEmail': value['bccEmail'],
        'PermissionLevel': value['permissionLevel'],
        'Phone': value['phone'],
        'UserTimeZone': UserCurrentGet200ResponseAllOfUserTimeZoneToJSON(value['userTimeZone']),
    };
}

export const UserOutputModelPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

