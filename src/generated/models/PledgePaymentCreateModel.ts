/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PledgePaymentCreateModelAllOfCustomValues } from './PledgePaymentCreateModelAllOfCustomValues';
import {
    PledgePaymentCreateModelAllOfCustomValuesFromJSON,
    PledgePaymentCreateModelAllOfCustomValuesFromJSONTyped,
    PledgePaymentCreateModelAllOfCustomValuesToJSON,
    PledgePaymentCreateModelAllOfCustomValuesToJSONTyped,
} from './PledgePaymentCreateModelAllOfCustomValues';
import type { PledgePaymentCreateModelAllOfAttachments } from './PledgePaymentCreateModelAllOfAttachments';
import {
    PledgePaymentCreateModelAllOfAttachmentsFromJSON,
    PledgePaymentCreateModelAllOfAttachmentsFromJSONTyped,
    PledgePaymentCreateModelAllOfAttachmentsToJSON,
    PledgePaymentCreateModelAllOfAttachmentsToJSONTyped,
} from './PledgePaymentCreateModelAllOfAttachments';

/**
 * 
 * @export
 * @interface PledgePaymentCreateModel
 */
export interface PledgePaymentCreateModel {
    /**
     * 
     * @type {number}
     * @memberof PledgePaymentCreateModel
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof PledgePaymentCreateModel
     */
    note?: string;
    /**
     * 
     * @type {string}
     * @memberof PledgePaymentCreateModel
     */
    acknowledgementStatus?: PledgePaymentCreateModelAcknowledgementStatusEnum;
    /**
     * 
     * @type {Array<number>}
     * @memberof PledgePaymentCreateModel
     */
    acknowledgementInteractionIds?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof PledgePaymentCreateModel
     */
    type?: PledgePaymentCreateModelTypeEnum;
    /**
     * The designation ID of the payment's pledge
     * @type {number}
     * @memberof PledgePaymentCreateModel
     */
    pledgeId: number;
    /**
     * 
     * @type {Array<PledgePaymentCreateModelAllOfCustomValues>}
     * @memberof PledgePaymentCreateModel
     */
    customValues?: Array<PledgePaymentCreateModelAllOfCustomValues>;
    /**
     * 
     * @type {Array<PledgePaymentCreateModelAllOfAttachments>}
     * @memberof PledgePaymentCreateModel
     */
    attachments?: Array<PledgePaymentCreateModelAllOfAttachments>;
}

/**
* @export
* @enum {string}
*/
export enum PledgePaymentCreateModelAcknowledgementStatusEnum {
    Yes = 'Yes',
    No = 'No',
    DoNotAcknowledge = 'DoNotAcknowledge'
}
/**
* @export
* @enum {string}
*/
export enum PledgePaymentCreateModelTypeEnum {
    PledgePayment = 'PledgePayment'
}


/**
 * Check if a given object implements the PledgePaymentCreateModel interface.
 */
export function instanceOfPledgePaymentCreateModel(value: object): value is PledgePaymentCreateModel {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('pledgeId' in value) || value['pledgeId'] === undefined) return false;
    return true;
}

export function PledgePaymentCreateModelFromJSON(json: any): PledgePaymentCreateModel {
    return PledgePaymentCreateModelFromJSONTyped(json, false);
}

export function PledgePaymentCreateModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PledgePaymentCreateModel {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['Amount'],
        'note': json['Note'] == null ? undefined : json['Note'],
        'acknowledgementStatus': json['AcknowledgementStatus'] == null ? undefined : json['AcknowledgementStatus'],
        'acknowledgementInteractionIds': json['AcknowledgementInteractionIds'] == null ? undefined : json['AcknowledgementInteractionIds'],
        'type': json['Type'] == null ? undefined : json['Type'],
        'pledgeId': json['PledgeId'],
        'customValues': json['CustomValues'] == null ? undefined : ((json['CustomValues'] as Array<any>).map(PledgePaymentCreateModelAllOfCustomValuesFromJSON)),
        'attachments': json['Attachments'] == null ? undefined : ((json['Attachments'] as Array<any>).map(PledgePaymentCreateModelAllOfAttachmentsFromJSON)),
    };
}

export function PledgePaymentCreateModelToJSON(json: any): PledgePaymentCreateModel {
    return PledgePaymentCreateModelToJSONTyped(json, false);
}

export function PledgePaymentCreateModelToJSONTyped(value?: PledgePaymentCreateModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Amount': value['amount'],
        'Note': value['note'],
        'AcknowledgementStatus': value['acknowledgementStatus'],
        'AcknowledgementInteractionIds': value['acknowledgementInteractionIds'],
        'Type': value['type'],
        'PledgeId': value['pledgeId'],
        'CustomValues': value['customValues'] == null ? undefined : ((value['customValues'] as Array<any>).map(PledgePaymentCreateModelAllOfCustomValuesToJSON)),
        'Attachments': value['attachments'] == null ? undefined : ((value['attachments'] as Array<any>).map(PledgePaymentCreateModelAllOfAttachmentsToJSON)),
    };
}

export const PledgePaymentCreateModelPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

