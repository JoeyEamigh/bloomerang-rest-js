/* tslint:disable */
/* eslint-disable */
/**
 * Bloomerang API
 * Private-key API for Bloomerang CRM
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@bloomerang.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RefundPostRequest
 */
export interface RefundPostRequest {
    /**
     * The ID of the transaction used in the API (not to be confused with transactionNumber)
     * @type {number}
     * @memberof RefundPostRequest
     */
    transactionId: number;
    /**
     * The reason for making this refund
     * @type {string}
     * @memberof RefundPostRequest
     */
    note?: string;
    /**
     * If true, the processor will be asked to refund the transaction as well as in the CRM.  If false, only the CRM will be updated. If omitted this field will default to true.
     * @type {boolean}
     * @memberof RefundPostRequest
     */
    runProcessorRefund?: boolean;
}

/**
 * Check if a given object implements the RefundPostRequest interface.
 */
export function instanceOfRefundPostRequest(value: object): value is RefundPostRequest {
    if (!('transactionId' in value) || value['transactionId'] === undefined) return false;
    return true;
}

export function RefundPostRequestFromJSON(json: any): RefundPostRequest {
    return RefundPostRequestFromJSONTyped(json, false);
}

export function RefundPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefundPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'transactionId': json['TransactionId'],
        'note': json['Note'] == null ? undefined : json['Note'],
        'runProcessorRefund': json['RunProcessorRefund'] == null ? undefined : json['RunProcessorRefund'],
    };
}

export function RefundPostRequestToJSON(json: any): RefundPostRequest {
    return RefundPostRequestToJSONTyped(json, false);
}

export function RefundPostRequestToJSONTyped(value?: RefundPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'TransactionId': value['transactionId'],
        'Note': value['note'],
        'RunProcessorRefund': value['runProcessorRefund'],
    };
}

export const RefundPostRequestPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

